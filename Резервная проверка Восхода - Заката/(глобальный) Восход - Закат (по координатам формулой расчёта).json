{
  "scenarioTemplate": {
    "name": "–í–æ—Å—Ö–æ–¥ - –ó–∞–∫–∞—Ç (–ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Ñ–æ—Ä–º—É–ª–æ–π —Ä–∞—Å—á—ë—Ç–∞)",
    "desc": "",
    "active": true,
    "onStart": false,
    "sync": false,
    "data": "// ========== –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========\nglobal.LAT = 4,17521;    // –®–∏—Ä–æ—Ç–∞ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞)\nglobal.LNG = 73,5092;    // –î–æ–ª–≥–æ—Ç–∞ (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞)\nglobal.TZ = 3;              // –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (MSK, UTC+3)\nglobal.ELEVATION = 17;     // –í—ã—Å–æ—Ç–∞ –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è –≤ –º–µ—Ç—Ä–∞—Ö (–¥–æ–±–∞–≤–ª–µ–Ω–æ)\n\n// ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========\nfunction padZero(num) {\n    return num < 10 ? \"0\" + num : num;\n}\n\nfunction formatTime(hours, minutes, seconds) {\n    return padZero(hours) + \":\" + padZero(minutes) + \":\" + padZero(seconds);\n}\n\n// ========== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–°–ß–ï–¢–ê ==========\nglobal.calculateSunTimes = function() {\n    var date = new Date();\n    var rad = Math.PI / 180;\n    var latRad = global.LAT * rad;\n    var start = new Date(date.getFullYear(), 0, 0);\n    var dayOfYear = Math.floor((date - start) / 86400000);\n    \n    var declination = 23.45 * rad * Math.sin(2 * Math.PI * (284 + dayOfYear) / 365);\n    var B = 2 * Math.PI * (dayOfYear - 81) / 365;\n    var equation = 9.87 * Math.sin(2*B) - 7.53 * Math.cos(B) - 1.5 * Math.sin(B);\n    \n    // –£—á–µ—Ç –≤—ã—Å–æ—Ç—ã –Ω–∞–¥ —É—Ä–æ–≤–Ω–µ–º –º–æ—Ä—è\n    var refraction = Math.acos(6371/(6371+global.ELEVATION/1000)) * (180/Math.PI);\n    var hourAngle = Math.acos(\n        (Math.cos(90.83 * rad) - Math.sin(latRad) * Math.sin(declination)) / \n        (Math.cos(latRad) * Math.cos(declination))\n    ) * 180 / Math.PI - refraction;\n    \n    var sunriseUTC = 12 - hourAngle/15 - equation/60 - (global.LNG/15);\n    var sunsetUTC = 12 + hourAngle/15 - equation/60 - (global.LNG/15);\n    \n    return {\n        sunrise: formatTime(\n            Math.floor(sunriseUTC + global.TZ),\n            Math.floor((sunriseUTC % 1) * 60),\n            0\n        ),\n        sunset: formatTime(\n            Math.floor(sunsetUTC + global.TZ),\n            Math.floor((sunsetUTC % 1) * 60),\n            0\n        ),\n        isDayTime: function() {\n            var now = new Date();\n            var nowMinutes = now.getHours() * 60 + now.getMinutes();\n            var sunriseMinutes = parseInt(this.sunrise.split(':')[0]) * 60 + parseInt(this.sunrise.split(':')[1]);\n            var sunsetMinutes = parseInt(this.sunset.split(':')[0]) * 60 + parseInt(this.sunset.split(':')[1]);\n            return nowMinutes >= sunriseMinutes && nowMinutes < sunsetMinutes;\n        }\n    };\n};\n\n// ========== –¢–ï–°–¢–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø ==========\nglobal.testSunCalc = function() {\n    var times = global.calculateSunTimes();\n    log.info(\n        \"–¢–µ—Å—Ç —Ä–∞—Å—á–µ—Ç–∞: –í–æ—Å—Ö–æ–¥ \" + times.sunrise + \n        \", –ó–∞–∫–∞—Ç \" + times.sunset + \n        \", –°–µ–π—á–∞—Å \" + (times.isDayTime() ? \"‚òÄÔ∏è –î–µ–Ω—å\" : \"üåô –ù–æ—á—å\") +\n        \", –í—ã—Å–æ—Ç–∞: \" + global.ELEVATION + \"–º\"\n    );\n};\n/* –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Ä–∞—Å—á–µ—Ç–æ–≤:\n–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞/–∑–∞–∫–∞—Ç–∞\n–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º (–¥–µ–Ω—å/–Ω–æ—á—å) –±–µ–∑ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏\n–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞: global.testSunCalc(); <==  –†–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –ª–æ–≥–∞—Ö\n*/\n//global.testSunCalc(); //<==  –†–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –ª–æ–≥–∞—Ö\n\n\n",
    "type": "GLOBAL"
  }
}